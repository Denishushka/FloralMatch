generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String   @unique
  avatarPath String   @default("/Users/denisragulin/Documents/Pages/Диплоная работа/Фото_иконки/dee9d44889f211efa46a66262e4c20b1_1.jpeg") @map("avatar_path")
  phone     String  @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  orders     Order[]
  reviews    Review[] 
  favorite  Product[]
}

model Product {
  id              Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  name           String    @unique
  slug           String     @unique
  description    String
  price          Int
  images         String[]

  orderItem      OrderItem[]
  reviews        Review[]

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int? @map("category_id")

  user User? @relation(fields: [userId], references: [id])
  userId Int? @map("user_id")
}

model Category{
  id              Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  name         String    @unique
  slug         String    @unique
  product Product[]
}

model Review{
  id              Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  rating Int
  text String

  user User @relation(fields: [userId], references: [id])
  userId Int @map("user_id")

  product Product @relation(fields: [productId], references: [id])
  productId Int @map("product_id")
}

model Order{
  id              Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  status EnumOrderStatus @default(PENDING)
  item OrderItem[]

  user User @relation(fields: [userId], references: [id])
  userId Int @map("user_id")
}

model OrderItem{
  id              Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  quantiry Int
  price Float

  order Order? @relation(fields: [orderId], references: [id])
  orderId Int? @map("order_id")

  product    Product   @relation(fields: [productId], references: [id])
  productId  Int       @map("product_id")
}

enum EnumOrderStatus{
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}

